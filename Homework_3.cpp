// Homework_3.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>


int main()


{
    /* 1.Ввести число, и определить – чётное оно, или нет.
    setlocale(LC_ALL, "RUS");
    int number;

    std::cout << "Введите число: ";
    std::cin >> number;

    if (number % 2 == 0) 
    {
        std::cout << "Число " << number << " является четным.\n";
    }
    else 
    {
        std::cout << "Число " << number << " является нечетным.\n";
    }

    return 0;

    2. Ввести число, и выяснить - положительное оно, отрицательное, или равно нулю ?
    
    setlocale(LC_ALL, "RUS");

    double number;

    std::cout << "Введите число: ";
    std::cin >> number;

    if (number > 0)
    {
        std::cout << "Число " << number << " положительное\n";
    }
    else if (number < 0)
    {
        std::cout << "Число " << number << " отрицательное\n";
    }
    else
    {
        std::cout << "Число равно нулю\n";
    }
    return 0; 

    3.Ввести три числа и найти наименьшее среди них.

    setlocale(LC_ALL, "RUS");

    double num1, num2, num3;

    std::cout << "Введите первое число: ";
    std::cin >> num1;

    std::cout << "Введите второе число: ";
    std::cin >> num2;

    std::cout << "Введите третье число: ";
    std::cin >> num3;

    double min = num1;

    if (num2 < min)
    {
        min = num2;
    }

    if (num3 < min)
    {
        min = num3; 
    }

    std::cout << "Наименьшее число: " << min << std::endl;

    return 0; 

    4.Ввести с клавиатуры символ.Определить, чем он является : цифрой, буквой или знаком пунктуации.

    setlocale(LC_ALL, "RUS");

    char symbol;

    std::cout << "Введите символ: ";
    std::cin >> symbol;

    if (isdigit(symbol)) 
    {
        std::cout << "Это цифра.";
    }
    else if (isalpha(symbol)) 
    {
        std::cout << "Это буква.";
    }
    else if (ispunct(symbol)) 
    {
        std::cout << "Это знак пунктуации.";
    }
    else 
    {
        std::cout << "Это другой тип символа.";
    }

    return 0; 

    //5. Ввести число и определить кратно ли оно 3, 5, и 7 одновременно.

    setlocale(LC_ALL, "RUS");

    int number;

    std::cout << "Введите число: ";
    std::cin >> number;

    if (number % 3 == 0 && number % 5 == 0 && number % 7 == 0) 
    {
        std::cout << "Число кратно 3, 5 и 7 одновременно.";
    }
    else 
    {
        std::cout << "Число не кратно 3, 5 и 7 одновременно.";
    }

return 0; 

    6. Определить, параллельна ли определённая прямая линия оси ординат, либо оси абсцисс.Прямая задаётся двумя точками.
    
    setlocale(LC_ALL, "RUS");

    double x1, y1;
    std::cout << "Введите координаты первой точки (x1, y1): ";
    std::cin >> x1 >> y1;


    double x2, y2;
    std::cout << "Введите координаты второй точки (x2, y2): ";
    std::cin >> x2 >> y2;


    if (y1 == y2) 
    {
    std::cout << "Прямая параллельна оси абсцисс (оси x).";
    }

    else if (x1 == x2) 
    {
    std::cout << "Прямая параллельна оси ординат (оси y).";
    }

    else 
    {
    std::cout << "Прямая не параллельна ни оси абсцисс (x), ни оси ординат (y).";
    }

return 0; 

    7.Указать с клавиатуры текущее время(количество часов, минут, секунд).Проверить корректность введённых значений.
    setlocale(LC_ALL, "RUS");

    int hours, minutes, seconds;

    std::cout << "Введите количество часов (0-23): ";
    std::cin >> hours;

    std::cout << "Введите количество минут (0-59): ";
    std::cin >> minutes;

    std::cout << "Введите количество секунд (0-59): ";
    std::cin >> seconds;

    if (hours >= 0 && hours <= 23 &&
        minutes >= 0 && minutes <= 59 &&
        seconds >= 0 && seconds <= 59) {
        std::cout << "Введенное время корректно: "
            << hours << " ч, "
            << minutes << " мин, "
            << seconds << " сек.";
    }
    else {
        std::cout << "Ошибка: введено некорректное время.";
    }

    return 0; 

   // 8.Проверить, имеет ли введённое число вещественную часть.
   // Например, числа 3.14 и 2.5 – имеют вещественную часть, а числа 5 и 10.0 – нет.

    setlocale(LC_ALL, "RUS");

    double num;
    std::cout << "Введите число: ";
    std::cin >> num;

    double intPart;
    double fracPart = modf(num, &intPart);

    if (fracPart == 0.0) 
    {
        std::cout << "Число не имеет вещественной части.";
    }
    else {
        std::cout << "Число имеет вещественную часть.";
    }

    return 0; 

    //9. Вводится время (только часы)
    // – программа выводит приветствие, соответствующее введённому времени 
    // (например, ввели 15 часов – выводится приветствие «добрый день»).

    setlocale(LC_ALL, "RUS");

    int hour;
    std::cout << "Введите время (только часы): ";
    std::cin >> hour;

    if (hour >= 0 && hour < 6) 
    {
    std::cout << "Доброй ночи!";
    }
    
    else if (hour >= 6 && hour < 12) 
    {
    std::cout << "Доброе утро!";
    }

    else if (hour >= 12 && hour < 18) 
    {
    std::cout << "Добрый день!";
    }

    else if (hour >= 18 && hour < 24) 
    {
    std::cout << "Добрый вечер!";
    }

    else 
    {
    std::cout << "Некорректное время. Введите значение от 0 до 23.";
    }

return 0; */

}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
